# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Mod Manager Package Deployment

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Create binary release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Package to EXE
        run: ./gradlew jlink -PisCI
        env:
          TOKEN: ${{ secrets.PERSONAL_REPO_KEY }}

      - name: Create Release
        id: create_release_private
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_REPO_KEY }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset-private
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_REPO_KEY }}
        with:
          upload_url: ${{ steps.create_release_private.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/dist/TTModManager.zip
          asset_name: TTModManager.zip
          asset_content_type: application/zip